name: Deploy to Server

on:
    push:
        branches:
            - "master"
            - "deployment-fix"
    pull_request:
        branches:
            - "master"

permissions:
    contents: read

concurrency:
    group: deploy-calc-stack
    cancel-in-progress: true

defaults:
    run:
        shell: "bash -euo pipefail {0}"

jobs:
    deploy:
        runs-on: self-hosted
        env:
            APP_PATH: /opt/calc_app
            STACK_NAME: calc_stack
            IMAGE_NAME: loan-calc-app
            IMAGE_TAG: latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Sync build context to ${APP_PATH}
              run: |
                  echo "Syncing to ${APP_PATH}"
                  mkdir -p "${APP_PATH}"
                  # One-time cleanup if this ever got copied previously:
                  rm -rf "${APP_PATH}/.git" || true
                  rsync -a --delete --delete-excluded \
                      --exclude '.git' \
                      "${{ github.workspace }}/" "${APP_PATH}/"

            - name: Verify synced files
              run: |
                  echo "Listing ${APP_PATH}:"
                  ls -la "${APP_PATH}"
                  echo "Dockerfile size (bytes):"
                  wc -c "${APP_PATH}/Dockerfile" || true

            - name: Build image (tags as :latest to match compose)
              run: |
                  # Use absolute paths to avoid /var/lib/snapd/void issues
                  docker build --pull \
                  -f "${APP_PATH}/Dockerfile" \
                  -t "${IMAGE_NAME}:${IMAGE_TAG}" \
                  "${APP_PATH}"

            - name: Render compose
              run: |
                  cd "${APP_PATH}"
                  docker compose config > /tmp/stack.rendered.yml

            - name: Deploy to Swarm (only on push)
              if: github.event_name == 'push'
              run: |
                  docker stack deploy --prune -c /tmp/stack.rendered.yml "${STACK_NAME}"

            - name: Verify rollout (only on push)
              if: github.event_name == 'push'
              run: |
                  echo "Services:"
                  docker stack services "${STACK_NAME}"
                  echo
                  echo "Tasks (running, up to 20 per svc):"
                  for svc in $(docker stack services --format '{{.Name}}' "${STACK_NAME}"); do
                    echo "---- $svc ----"
                    docker service ps --no-trunc --filter desired-state=running --limit 20 "$svc" || true
                  done

            - name: Cleanup dangling images
              run: |
                  docker image prune -f || true
